# PostgreSQL. Versions 9.3 and up are supported.
#
# Install the pg driver:
#   gem install pg
# On macOS with Homebrew:
#   gem install pg -- --with-pg-config=/usr/local/bin/pg_config
# On Windows:
#   gem install pg
#       Choose the win32 build.
#       Install PostgreSQL and put its /bin directory on your path.
#
# Configure Using Gemfile
# gem "pg"
#
default: &default
  adapter: postgresql
  encoding: unicode
  # For details on connection pooling, see Rails configuration guide
  # https://guides.rubyonrails.org/configuring.html#database-pooling
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  # Connection timeout in milliseconds
  connect_timeout: 5000
  # Checkout timeout for getting connection from pool
  checkout_timeout: 5
  # Reaping frequency for cleaning up dead connections (seconds)
  reaping_frequency: 10
  # Idle timeout for connections in seconds
  idle_timeout: 300


development:
  primary: &primary_development
    <<: *default
    database: qc_api_development
    # Development-specific settings
    host: <%= ENV.fetch("DB_HOST", "localhost") %>
    username: <%= ENV.fetch("DB_USERNAME", "postgres") %>
    password: <%= ENV.fetch("DB_PASSWORD", "") %>
    port: <%= ENV.fetch("DB_PORT", 5432) %>
  cache:
    <<: *primary_development
  queue:
    <<: *primary_development
  cable:
    <<: *primary_development

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default
  database: qc_api_test
  # Test-specific settings for faster test runs
  pool: 10
  host: <%= ENV.fetch("DB_HOST", "localhost") %>
  username: <%= ENV.fetch("DB_USERNAME", "postgres") %>
  password: <%= ENV.fetch("DB_PASSWORD", "") %>
  port: <%= ENV.fetch("DB_PORT", 5432) %>

# As with config/credentials.yml, you never want to store sensitive information,
# like your database password, in your source code. If your source code is
# ever seen by anyone, they now have access to your database.
#
# Instead, provide the password or a full connection URL as an environment
# variable when you boot the app. For example:
#
#   DATABASE_URL="postgres://myuser:mypass@localhost/somedatabase"
#
# If the connection URL is provided in the special DATABASE_URL environment
# variable, Rails will automatically merge its configuration values on top of
# the values provided in this file. Alternatively, you can specify a connection
# URL environment variable explicitly:
#
#   production:
#     url: <%= ENV["MY_APP_DATABASE_URL"] %>
#
# Read https://guides.rubyonrails.org/configuring.html#configuring-a-database
# for a full overview on how database connection configuration can be specified.
#
production:
  primary: &primary_production
    <<: *default
    url: <%= ENV['DATABASE_URL'] %>
    # Production-optimized connection pool settings
    pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 20 } %>
    # Statement timeout to prevent long-running queries
    statement_timeout: 60000
    # Prepared statements for better performance
    prepared_statements: true
    # Advisory locks for migrations
    advisory_locks: true
  cache:
    <<: *primary_production
  queue:
    <<: *primary_production
  cable:
    <<: *primary_production
