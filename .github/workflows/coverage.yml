name: Coverage Report

on:
  pull_request:
  push:
    branches: [main, develop]

jobs:
  coverage:
    name: Generate Coverage Report
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-qc-app
          fail_ci_if_error: false
          verbose: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Generate coverage badge
        uses: cicirello/jacoco-badge-generator@v2
        with:
          coverage-badge-filename: coverage.svg
          generate-coverage-badge: true
          coverage-label: Coverage
          colors: '#4c1 #97ca00 #a4a61d #dfb317 #fe7d37 #e05d44'
          intervals: 100 90 80 70 60 0
        continue-on-error: true

      - name: Comment PR with coverage
        if: github.event_name == 'pull_request'
        uses: ArtiomTr/jest-coverage-report-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          test-script: npm run test:coverage
          threshold: 80
          skip-step: install
          annotations: failed-tests
        continue-on-error: true

      - name: Coverage Summary
        if: always()
        run: |
          echo "## Coverage Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ -f coverage/lcov-report/index.html ]; then
            # Extract coverage percentages from lcov report
            STATEMENTS=$(grep -oP 'Statements.*?(\d+\.?\d*)%' coverage/lcov-report/index.html | grep -oP '\d+\.?\d*' | head -1 || echo "0")
            BRANCHES=$(grep -oP 'Branches.*?(\d+\.?\d*)%' coverage/lcov-report/index.html | grep -oP '\d+\.?\d*' | head -1 || echo "0")
            FUNCTIONS=$(grep -oP 'Functions.*?(\d+\.?\d*)%' coverage/lcov-report/index.html | grep -oP '\d+\.?\d*' | head -1 || echo "0")
            LINES=$(grep -oP 'Lines.*?(\d+\.?\d*)%' coverage/lcov-report/index.html | grep -oP '\d+\.?\d*' | head -1 || echo "0")

            echo "| Metric | Coverage |" >> $GITHUB_STEP_SUMMARY
            echo "|--------|----------|" >> $GITHUB_STEP_SUMMARY
            echo "| Statements | ${STATEMENTS}% |" >> $GITHUB_STEP_SUMMARY
            echo "| Branches | ${BRANCHES}% |" >> $GITHUB_STEP_SUMMARY
            echo "| Functions | ${FUNCTIONS}% |" >> $GITHUB_STEP_SUMMARY
            echo "| Lines | ${LINES}% |" >> $GITHUB_STEP_SUMMARY
          else
            echo "Coverage report not found" >> $GITHUB_STEP_SUMMARY
          fi